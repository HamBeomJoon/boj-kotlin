package `0x06ÌÅê`import java.io.BufferedReaderimport java.io.InputStreamReaderimport java.util.LinkedListimport java.util.Queueimport java.util.StringTokenizerfun main() {    val br = BufferedReader(InputStreamReader(System.`in`))    val n = br.readLine().toInt()    val q: Queue<Int> = LinkedList()    val sb = StringBuilder()    for (i in 1..n) {        val st = StringTokenizer(br.readLine(), " ")        when (st.nextToken()) {            "push" -> {                q.add(st.nextToken().toInt())            }            "pop" -> {                if (!q.isEmpty()) {                    sb.append("${q.poll()}\n")                } else sb.append("-1\n")            }            "front" -> {                if (!q.isEmpty()) {                    sb.append("${q.first()}\n")                } else sb.append("-1\n")            }            "back" -> {                if (!q.isEmpty()) {                    sb.append("${q.last()}\n")                } else sb.append("-1\n")            }            "size" -> {                sb.append("${q.size}\n")            }            else -> {                if (q.isEmpty()) sb.append("1\n")                else sb.append("0\n")            }        }    }    println(sb)}