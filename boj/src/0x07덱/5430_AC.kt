package `0x07Îç±`import java.io.BufferedReaderimport java.io.InputStreamReaderimport java.util.StringTokenizerfun main() {    val br = BufferedReader(InputStreamReader(System.`in`))    val t = br.readLine().toInt()    val dq = ArrayDeque<Int>()    val sb = StringBuilder()    repeat(t) {        var reverse = false        var error = false        val cmd = br.readLine()        val n = br.readLine().toInt()        val st = StringTokenizer(br.readLine(), "[],")        repeat(n) { dq.add(st.nextToken().toInt()) }        for (i in cmd) {            if (i == 'R') reverse = !reverse            else {                if (dq.isEmpty()) {                    error = true                    break                } else if (reverse) {                    dq.removeLast()                } else {                    dq.removeFirst()                }            }        }        if (error) sb.append("error\n")        else {            if (reverse) {                sb.append("[")                while (!dq.isEmpty()) {                    sb.append(dq.removeLast())                    if (dq.isEmpty()) break                    sb.append(",")                }                sb.appendLine("]")            } else {                sb.append("[")                while (!dq.isEmpty()) {                    sb.append(dq.removeFirst())                    if (dq.isEmpty()) break                    sb.append(",")                }                sb.appendLine("]")            }        }    }    println(sb)}